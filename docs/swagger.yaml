openapi: 3.0.2
info:
    title: BookEST
    version: 1.0.0
paths:
    /rooms:
        get:
            tags:
                - rooms
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                list of rooms:
                                    value:
                                        - Suites
                                        - Double
                                        - Twin
                    description: return of list of rooms
            summary: get a list of rooms from api
            description: returns a list of all rooms in the API
        post:
            requestBody:
                description: a new room to be created
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/new-room'
                        examples:
                            example of a room:
                                value:
                                    name: some text
                                    price: 8.51
                                    description: some text
                required: true
            tags:
                - new-room
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/new-room'
                    description: Rooms has been created into the array/database
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                One or all details are missing:
                                    value:
                                        error: One or all details are missing
                    description: NOt found
            description: one or more not found
    '/rooms/{id}':
        get:
            tags:
                - details
            parameters:
                -
                    examples:
                        Id of a room:
                            value: '48'
                    name: id
                    description: Id of the room
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Details of a room:
                                    value: |-
                                        [
                                           "id": 1,
                                               "name": "double",
                                                "price": 111.50,
                                                "decription": "with view"
                                        ]
                    description: 'Returns full details of a given room, as determined by the id'
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                room not found:
                                    value:
                                        error: room not found wit given id
                    description: Room not found with given Id
            summary: Get full details of a room
            description: Returns full detauils about a specific room as determined by id input put the user
        delete:
            tags:
                - delete-room
            parameters:
                -
                    examples:
                        integer of requested id:
                            value: '63'
                    name: id
                    description: Id of the room that we require
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/delete-room'
                            examples:
                                delete:
                                    value:
                                        id: 5
                    description: 'Deleted successfully, nothing to display'
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: 'Can''t delete, id not found'
                    description: room not found
            summary: Delete rooms with given Id
            description: Delete rooms with given Id
        parameters:
            -
                examples:
                    integer of requested id:
                        value: '63'
                name: id
                description: Id of the room that we require
                schema:
                    type: integer
                in: path
                required: true
    /clients:
        get:
            tags:
                - clients
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                1 example(s) defined:
                                    value:
                                        - Triine
                                        - Pille
                                        - Tiit
                    description: returns list of clients
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                client not found:
                                    value:
                                        error: client not found with given id
                    description: Client not found with given Id
            summary: get a list of clients from api
            description: returns a list of all clients in the API
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/new-client'
                        examples:
                            example of a client:
                                value: |-
                                    [
                                        "id": 1,
                                        "Name": "Triin",
                                        "Telephone": "5612565656",
                                        "Email": "tititi@hihihi",
                                        "Address": "Kohila 27"
                                    ]
                required: true
            tags:
                - new-client
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/new-client'
                    description: Clients has been created into the array/database
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                One or all details are missing:
                                    value:
                                        error: One or all details are missing
                    description: Not found
            description: one of more not found
    '/clients/{id}':
        get:
            tags:
                - details
            parameters:
                -
                    examples:
                        integer of requested if:
                            value: '30'
                    name: id
                    description: Id of the client that we require
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Details of a client:
                                    value: |-
                                        [
                                            "id": 1,
                                            "Name": "Triin",
                                            "Telephone": "5612565656",
                                            "Email": "tititi@hihihi",
                                            "Address": "Kohila 27"
                                        ]
                    description: Returns full details of a given client as determined by the id
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                client not found:
                                    value:
                                        error: client not found wit given id
                    description: Client not found with given id
            summary: Get full details of a client
            description: Returns details of the clients as determined by the id input put the user
        delete:
            tags:
                - delete-client
            parameters:
                -
                    examples:
                        delete:
                            value:
                                id: 5
                    name: id
                    description: Id of the client thay we required
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '204':
                    description: 'Deleted successfully, nothing to display'
            summary: Delete clients with given id
            description: Delete clients with given id
    /bookings:
        get:
            tags:
                - bookings
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                list of bookings:
                                    value: |-
                                        [
                                        "Id": 27,
                                        "RoomID": 1,
                                        "ClientID": 34,
                                        "StartTime": "2024-01-19",
                                        "EndTime": "2024-01-20",
                                        "Status": "booked",
                                        "DateCancelled": null
                                        ]
                    description: returns a list of bookings
            summary: get a list of bookigs from api
            description: returns a list of bookings from api
        post:
            requestBody:
                description: a new bookinhg to be created
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/new-booking'
                        examples:
                            example of a booking:
                                value:
                                    Id: 27
                                    RoomID: 1
                                    ClientID: 34
                                    StartTime: '2024-01-19'
                                    EndTime: '2024-01-20'
                                    Status: booked
                required: true
            tags:
                - new-booking
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/new-booking'
                    description: Bookings has been created into the array/database
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                One or all details are missing":
                                    value:
                                        error: One or all details are missing
                    description: not found
    '/bookings/{id}':
        get:
            tags:
                - details
            parameters:
                -
                    examples:
                        integer of a requested ud:
                            value: '3'
                    name: id
                    description: id of the booking
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Details of a booking:
                                    value: |

                                        "Id": 27,
                                        "RoomID": 1,
                                        "ClientID": 34,
                                        "StartTime": "2024-01-19",
                                        "EndTime": "2024-01-20",
                                        "Status": "booked",
                                        "DateCancelled": null
                    description: 'Returns full details of a given booking, as determined by the id'
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                booking not found:
                                    value:
                                        error: booking not founf with given id
                    description: Booking not found with given Id
            operationId: id
            summary: Get full details of bookings
            description: Returns full detauils about a specific booking as determined by id input put the user
        delete:
            tags:
                - delete-room
            parameters:
                -
                    examples:
                        integer of a requested ud:
                            value: '3'
                    name: id
                    description: Id of the booking we required
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '204':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/delete-room'
                            examples:
                                delete:
                                    value:
                                        id: 5
                    description: 'Deleted succesfullt, nothing to display'
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: 'can''t delete, id not not found'
                    description: booking not found
            summary: Delete booking with given id
            description: Delete booking with given id
        parameters:
            -
                examples:
                    integer of a requested ud:
                        value: '3'
                name: id
                description: '{"error":"One or all details are missing"}'
                schema:
                    type: integer
                in: path
                required: true
components:
    schemas:
        new-room:
            title: Root Type for new-room
            description: ''
            required:
                - price
                - name
                - description
            type: object
            properties:
                name:
                    type: string
                price:
                    format: float
                    type: number
                description:
                    type: string
            example:
                name: Presidental suite
                price: 99999
                description: Extra king sized bed with bath view
        error:
            title: Root Type for error
            description: ''
            type: object
            properties:
                error:
                    type: string
            example:
                error: Error message
        delete-room:
            description: Delete room with given id
            required:
                - id
            type: object
            properties:
                id:
                    description: id of the room
                    type: integer
            example:
                id: 34
        new-client:
            description: ''
            type: object
        new-booking:
            description: ''
            type: object
